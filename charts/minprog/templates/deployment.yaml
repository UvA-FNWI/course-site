apiVersion: apps/v1
kind: Deployment
metadata:
  name: minprog
  namespace: "{{ .Release.Namespace }}"
spec:
  selector:
    matchLabels:
      app: minprog
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: minprog
        {{- if .Values.azure }}
        aadpodidbinding: minprog-azure-kv
        {{- end }}
    spec:
      containers:
        - name: minprog
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: RAILS_ENV
              value: production
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: OIDC_HOST
              value: "{{ .Values.oidc.host }}"
            - name: OIDC_CLIENT_ID
              value: "{{ .Values.oidc.clientId }}"
            - name: GITHUB_BASE
              value: "{{ .Values.github.base }}"
            - name: GITHUB_BRANCH
              value: "{{ .Values.github.branch }}"
          envFrom:
            - secretRef:
                name: minprog-secret
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/etc/secrets"
              readOnly: true
            - name: minprog-data
              mountPath: "/data"

      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "minprog-secretproviderclass"
        - name: minprog-data
          persistentVolumeClaim:
            claimName: minprog-data